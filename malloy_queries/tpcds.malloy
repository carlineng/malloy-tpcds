// Dimensions
source: call_center is table('duckdb:../data/call_center.parquet') {
  primary_key: cc_call_center_sk
}

source: catalog_page is table('duckdb:../data/catalog_page.parquet') {
  primary_key: cp_catalog_page_sk
}

source: customer_address is table('duckdb:../data/customer_address.parquet') {
  primary_key: ca_address_sk
}

source: customer_demographics is table('duckdb:../data/customer_demographics.parquet') {
  primary_key: cd_demo_sk
}

source: customer is table('duckdb:../data/customer.parquet') {
  primary_key: c_customer_sk
  join_one: customer_address with c_current_addr_sk
  join_one: customer_demographics with c_current_cdemo_sk 
}

source: date_dim is table('duckdb:../data/date_dim.parquet') {
  primary_key: d_date_sk
}

source: household_demographics is table('duckdb:../data/household_demographics.parquet') {
  primary_key: hd_demo_sk
}

source: item is table('duckdb:../data/item.parquet') {
  primary_key: i_item_sk
}

source: promotion is table('duckdb:../data/promotion.parquet') {
  primary_key: p_promo_sk
}

source: reason is table('duckdb:../data/reason.parquet') {
  primary_key: r_reason_sk
}

source: store is table('duckdb:../data/store.parquet') {
  primary_key: s_store_sk
}

source: time_dim is table('duckdb:../data/time_dim.parquet') {
  primary_key: t_time_sk
}

source: warehouse is table('duckdb:../data/warehouse.parquet') {
  primary_key: w_warehouse_sk
}

source: web_site is table('duckdb:../data/web_site.parquet') {
  primary_key: web_site_sk
}

// Facts

source: inventory is table('duckdb:../data/inventory.parquet') {
  join_one: date_dim with inv_date_sk
  join_one: item with inv_item_sk
  join_one: warehouse with inv_warehouse_sk
}

source: store_sales is table('duckdb:../data/store_sales.parquet') {
  join_one: date_dim with ss_sold_date_sk
  join_one: store with ss_store_sk
  join_one: customer with ss_customer_sk
  join_one: item with ss_item_sk
  join_one: promotion with ss_promo_sk
  join_one: household_demographics with ss_hdemo_sk
  join_one: customer_demographics with ss_cdemo_sk
  join_one: customer_address with ss_addr_sk

  dimension: channel_category is 'store channel'
  dimension: channel_id is concat('store', store.s_store_id)

  measure: total_ext_sales is sum(ss_ext_sales_price)
  measure: total_profit is sum(ss_net_profit)

  query: projection is {
    project:
      channel_category
      channel_id
      sold_date_sk is ss_sold_date_sk
      sold_time_sk is ss_sold_time_sk
      item_sk is ss_item_sk
      customer_sk is ss_customer_sk 
      cdemo_sk is ss_cdemo_sk
      promo_sk is ss_promo_sk
      quantity is ss_quantity
      ext_sales_price is ss_ext_sales_price
      wholesale_cost is ss_wholesale_cost
      list_price is ss_list_price
      sales_price is ss_sales_price
      ext_discount_amt is ss_ext_discount_amt
      ext_wholesale_cost is ss_ext_wholesale_cost
      ext_list_price is ss_ext_list_price
      ext_tax is ss_ext_tax
      coupon_amt is ss_coupon_amt
      net_paid is ss_net_paid
      net_paid_inc_tax is ss_net_paid_inc_tax
      net_profit is ss_net_profit

    where: store.s_store_id != null
  }

}
  
source: store_returns is table('duckdb:../data/store_returns.parquet') {
  join_one: date_dim with sr_returned_date_sk
  join_one: store with sr_store_sk
  join_one: customer with sr_customer_sk

  dimension: channel_category is 'store channel'
  dimension: channel_id is concat('store', store.s_store_id)

  measure: total_returns is sum(sr_return_amt)
  measure: avg_returns is avg(sr_return_amt)
  measure: total_loss is sum(sr_net_loss)

  query: projection is {
    project:
      channel_category
      channel_id
      customer_sk is sr_customer_sk
      returned_date_sk is sr_returned_date_sk
      return_amt is sr_return_amt
      net_loss is sr_net_loss

    where: store.s_store_id != null
  }
}

source: catalog_returns is table('duckdb:../data/catalog_returns.parquet') {
  join_one: date_dim with cr_returned_date_sk
  join_one: catalog_page with cr_catalog_page_sk
  join_one: customer with cr_refunded_customer_sk

  dimension: channel_category is 'catalog channel'
  dimension: channel_id is concat('catalog_page', catalog_page.cp_catalog_page_id)

  measure: total_returns is sum(cr_return_amount)
  measure: avg_returns is avg(cr_return_amount)
  measure: total_loss is sum(cr_net_loss)

  query: projection is {
    project:
      channel_category
      channel_id
      customer_sk is cr_refunded_customer_sk
      returned_date_sk is cr_returned_date_sk
      return_amt is cr_return_amount
      net_loss is cr_net_loss

    where: catalog_page.cp_catalog_page_id != null
  }
}

source: catalog_sales is table('duckdb:../data/catalog_sales.parquet') {
  join_one: date_dim with cs_sold_date_sk
  join_one: catalog_page with cs_catalog_page_sk
  join_one: customer with cs_bill_customer_sk
  join_one: ship_address is customer_address with cs_ship_addr_sk
  join_one: ship_date is date_dim with cs_ship_date_sk
  join_one: call_center with cs_call_center_sk
  join_one: catalog_returns on cs_order_number = catalog_returns.cr_order_number
  join_one: customer_demographics with cs_bill_cdemo_sk
  join_one: item with cs_item_sk

  dimension: channel_category is 'catalog channel'
  dimension: channel_id is concat('catalog_page', catalog_page.cp_catalog_page_id)

  measure: total_ext_sales is sum(cs_ext_sales_price)
  measure: total_profit is sum(cs_net_profit)

  query: projection is {
    project:
      channel_category
      channel_id
      sold_date_sk is cs_sold_date_sk
      sold_time_sk is cs_sold_time_sk
      item_sk is cs_item_sk
      customer_sk is cs_bill_customer_sk 
      cdemo_sk is cs_bill_cdemo_sk
      promo_sk is cs_promo_sk
      quantity is cs_quantity
      ext_sales_price is cs_ext_sales_price
      wholesale_cost is cs_wholesale_cost
      list_price is cs_list_price
      sales_price is cs_sales_price
      ext_discount_amt is cs_ext_discount_amt
      ext_wholesale_cost is cs_ext_wholesale_cost
      ext_list_price is cs_ext_list_price
      ext_tax is cs_ext_tax
      coupon_amt is cs_coupon_amt
      net_paid is cs_net_paid
      net_paid_inc_tax is cs_net_paid_inc_tax
      net_profit is cs_net_profit

    where: catalog_page.cp_catalog_page_id != null
  }
}

source: web_sales is table('duckdb:../data/web_sales.parquet') {
  join_one: date_dim with ws_sold_date_sk
  join_one: customer with ws_bill_customer_sk
  join_one: web_site with ws_web_site_sk
  join_one: item with ws_item_sk

  dimension: channel_category is 'web channel'
  dimension: channel_id is concat('web_site', web_site.web_site_id)

  measure: total_ext_sales is sum(ws_ext_sales_price)
  measure: total_profit is sum(ws_net_profit)

  query: projection is {
    project:
      channel_category
      channel_id
      sold_date_sk is ws_sold_date_sk
      sold_time_sk is ws_sold_time_sk
      item_sk is ws_item_sk
      customer_sk is ws_bill_customer_sk 
      cdemo_sk is ws_bill_cdemo_sk
      promo_sk is ws_promo_sk
      quantity is ws_quantity
      ext_sales_price is ws_ext_sales_price
      wholesale_cost is ws_wholesale_cost
      list_price is ws_list_price
      sales_price is ws_sales_price
      ext_discount_amt is ws_ext_discount_amt
      ext_wholesale_cost is ws_ext_wholesale_cost
      ext_list_price is ws_ext_list_price
      ext_tax is ws_ext_tax
      coupon_amt is ws_coupon_amt
      net_paid is ws_net_paid
      net_paid_inc_tax is ws_net_paid_inc_tax
      net_profit is ws_net_profit

    where: web_site.web_site_id != null
  }
}

source: web_returns is table('duckdb:../data/web_returns.parquet') {
  join_one: date_dim with wr_returned_date_sk
  join_one: customer with wr_refunded_customer_sk
  join_one: web_sales on wr_item_sk = web_sales.ws_item_sk and wr_order_number = web_sales.ws_order_number

  measure: total_returns is sum(wr_return_amt)
  measure: total_loss is sum(wr_net_loss)
  measure: avg_returns is avg(wr_return_amt)

  dimension: channel_category is 'web channel'
  dimension: channel_id is concat('web_site', web_sales.web_site.web_site_id)

  query: projection is {
    project:
      channel_category
      channel_id
      customer_sk is wr_refunded_customer_sk
      returned_date_sk is wr_returned_date_sk
      return_amt is wr_return_amt
      net_loss is wr_net_loss

    where: web_sales.web_site.web_site_id != null
  }
}

sql: all_sales_sql is {
  select: """
  SELECT * FROM (%{ web_sales -> projection }%)
  UNION ALL
  SELECT * FROM (%{ catalog_sales -> projection }%)
  UNION ALL
  SELECT * FROM (%{ store_sales -> projection }%)
  """
  connection: "duckdb"
}

sql: all_returns_sql is {
  select: """
  SELECT * FROM (%{ web_returns -> projection }%)
  UNION ALL
  SELECT * FROM (%{ catalog_returns -> projection }%)
  UNION ALL
  SELECT * FROM (%{ store_returns -> projection }%)
  """
  connection: "duckdb"
}

source: all_sales is from_sql(all_sales_sql) {
  join_one: date_dim with sold_date_sk
  join_one: customer_demographics with cdemo_sk
  join_one: customer with customer_sk
  join_one: item with item_sk
  join_one: promotion with promo_sk

  measure: total_sales is sum((ext_list_price - ext_wholesale_cost - ext_discount_amt + ext_sales_price) / 2)
  measure: total_ext_sales_price is sum(ext_sales_price)
  measure: total_profit is sum(net_profit)
  measure: total_list_minus_discount is sum(ext_list_price - ext_discount_amt)
  measure: avg_quantity is avg(quantity)
  measure: avg_list_price is avg(list_price)
  measure: avg_coupon_amt is avg(coupon_amt)
  measure: avg_sales_price is avg(sales_price)

  measure: count_store_sales is count(*) { where: channel_category = 'store channel' }
  measure: count_web_sales is count(*) { where: channel_category = 'web channel' }
  measure: count_catalog_sales is count(*) { where: channel_category = 'catalog channel' }

  query: daily_profit_loss is {
    group_by:
      channel_category
      channel_id
      date_dim.d_date

    aggregate:
      sales is total_ext_sales_price
      total_profit
      return_amt is 0
      net_loss is 0
  }
}

source: all_returns is from_sql(all_returns_sql) {
  join_one: date_dim with returned_date_sk
  join_one: customer with customer_sk

  measure: total_returns is sum(return_amt)
  measure: total_loss is sum(net_loss)

  query: daily_profit_loss is {
    group_by:
      channel_category
      channel_id
      date_dim.d_date

    aggregate:
      sales is 0
      total_profit is 0
      return_amt is total_returns
      net_loss is total_loss
  }
}
