import "tpcds.malloy"

// Count distinct is insufficient because null wr_returning_customer_sk is included in average

run: web_returns -> {
  group_by:
    wr_returning_customer_sk
    returning_state is returning_addr.ca_state
    returning_customer.c_customer_id
    returning_customer.c_salutation
    returning_customer.c_first_name
    returning_customer.c_last_name
    returning_customer.c_preferred_cust_flag
    returning_customer.c_birth_day
    returning_customer.c_birth_month
    returning_customer.c_birth_year
    returning_customer.c_birth_country
    returning_customer.c_login
    returning_customer.c_email_address
    returning_customer.c_last_review_date
    returning_customer_state is returning_customer.customer_address.ca_state

  aggregate: 
    customer_total_returns is total_returns
    total_web_return is all(sum(wr_return_amt), wr_returning_customer_sk, returning_state)

  where:
    date_dim.d_year = 2002
    and wr_return_amt != null
    and returning_addr.ca_state != null
} -> {
  group_by:
    c_customer_id
    c_salutation
    c_first_name
    c_last_name
    c_preferred_cust_flag
    c_birth_day
    c_birth_month
    c_birth_year
    c_birth_country
    c_login
    c_email_address
    c_last_review_date
    customer_total_returns
    returning_state
    returning_customer_state

  aggregate:
  ave_return is all(avg(total_web_return), returning_state)

} -> {
  select:
    c_customer_id
    c_salutation
    c_first_name
    c_last_name
    c_preferred_cust_flag
    c_birth_day
    c_birth_month
    c_birth_year
    c_birth_country
    c_login
    c_email_address
    c_last_review_date
    customer_total_returns
  where: 
    customer_total_returns > ave_return * 1.2
    and returning_customer_state = 'GA'
    and c_customer_id != null

  order_by:
    c_customer_id
  limit: 100
}
