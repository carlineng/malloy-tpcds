import "tpcds.malloy"

source: frequent_ss_items is from(
  store_sales -> {
    group_by:
      itemdesc is substr(item.i_item_desc, 1, 30)
      item_sk is item.i_item_sk
      solddate is date_dim.d_date

    aggregate:
      cnt is count(*)

    where:
      item.i_item_sk != null
      and (
        date_dim.d_year = 2000
        or date_dim.d_year = 2001
        or date_dim.d_year = 2002
        or date_dim.d_year = 2003
      )

    having:
      count(*) > 4
  }
) {
  primary_key: item_sk
}

source: max_store_sales is from(
  store_sales -> {
    group_by:
      customer.c_customer_sk

    aggregate:
      csales is sum(ss_quantity * ss_sales_price)

    where:
      (
        date_dim.d_year = 2000
        or date_dim.d_year = 2001
        or date_dim.d_year = 2002
        or date_dim.d_year = 2003
      )
      and customer.c_customer_sk != null
  } -> {
    aggregate:
      cmax is max(csales)
  }
)

source: best_ss_customer is from(
  store_sales + {
    join_one: max_store_sales on true
  } -> {
    group_by:
      customer_sk is customer.c_customer_sk

    aggregate:
      ssales is sum(ss_quantity * ss_sales_price)

    where:
      customer.c_customer_sk != null

    having:
      sum(ss_quantity * ss_sales_price) > 0.5 * max(max_store_sales.cmax)
  }
) {
  primary_key:
    customer_sk
}

query: all_sales + {
  join_one: best_ss_customer with customer_sk
  join_one: frequent_ss_items with item_sk
} -> {
  group_by:
    customer.c_last_name
    customer.c_first_name

  aggregate:
    sales is sum(quantity * list_price)

  where:
    best_ss_customer.customer_sk != null
    and frequent_ss_items.item_sk != null
    and date_dim.d_year = 2000
    and date_dim.d_moy = 2
    and (
      channel_category = 'catalog channel'
      or channel_category = 'web channel'
    )

  order_by:
    c_last_name
    c_first_name
    sales

  limit: 100
}
